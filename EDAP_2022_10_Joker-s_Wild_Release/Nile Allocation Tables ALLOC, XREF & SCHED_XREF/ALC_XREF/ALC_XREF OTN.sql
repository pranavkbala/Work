
--Load Config JSONs here:

--dbfs:/FileStore/tables/config/rms_alc/alc_xref/

create table PROD_EDAP_ANALYTICS_DB.PROD_EDAP_ANALYTICS_TABLES.INV_ALLOCATION_XREF
  ( INV_ALLOCATION_XREF_KEY NUMBER(38,0) NOT NULL,
    INV_ALLOCATION_XREF_ID VARCHAR(16777216),
    INV_ALLOCATION_KEY NUMBER(38,0), 
    INV_ALLOCATION_ID VARCHAR(16777216),
    ITEM_KEY NUMBER(38,0),
    ITEM_ID VARCHAR(16777216),
    MARKET_CD VARCHAR(16777216),
    PO_HEADER_KEY NUMBER(38,0),
    PO_HEADER_ID VARCHAR(16777216),
    LOCATION_KEY NUMBER(38,0),
    LOCATION_ID VARCHAR(16777216),
    ITEM_STYLE_CD VARCHAR(16777216),
    RELEASE_DT DATE,
    ALLOCATED_QTY NUMBER(38,0),
    DISTRO_NBR NUMBER(38,0),
    INSERT_TS TIMESTAMP_NTZ(9) NOT NULL,
    UPDATE_TS TIMESTAMP_NTZ(9) NOT NULL
   );


insert into PROD_EDAP_L1_DB.PROD_EDAP_L1_TABLES.DATA_PIPELINE_CONFIG  
values (
3,
'ALLOCATION',
5,
'INV_ALLOCATION_XREF',
1,
'RMS_INV_ALLOCATION_XREF',
1,
1,
'DROP TABLE IF EXISTS #ENV#_EDAP_STAGE_DB.#ENV#_EDAP_STAGE_TABLES.RMS_INV_ALLOCATION_XREF_VIEW;
DROP TABLE IF EXISTS #ENV#_EDAP_STAGE_DB.#ENV#_EDAP_STAGE_TABLES.RMS_INV_ALLOCATION_XREF_VIEW_SK;

create or replace table #ENV#_EDAP_STAGE_DB.#ENV#_EDAP_STAGE_TABLES.RMS_INV_ALLOCATION_XREF_VIEW as
(
select 
  cast(-1 as bigint) as INV_ALLOCATION_XREF_KEY,
  TRIM(to_varchar(xref.XREF_ID)) as INV_ALLOCATION_XREF_ID,
  TRIM(CAST(coalesce(alloc.INV_ALLOCATION_KEY,-1) as bigint)) as INV_ALLOCATION_KEY,
  TRIM(to_varchar(xref.ALLOC_ID)) as INV_ALLOCATION_ID,
  TRIM(CAST(coalesce(itm.ITEM_KEY,-1) as bigint)) as ITEM_KEY,        
  TRIM(to_varchar(xref.ITEM_ID)) as ITEM_ID,   
  TRIM(to_varchar(itm.MARKET_CD)) as MARKET_CD,
  TRIM(CAST(coalesce(poh.PO_HEADER_KEY,-1) as bigint))  as PO_HEADER_KEY,        
  TRIM(to_varchar(xref.ORDER_NO))  as PO_HEADER_ID,        
  TRIM(CAST(coalesce(loc.LOCATION_KEY,-1) as bigint)) as LOCATION_KEY,        
  TRIM(to_varchar(xref.WH_ID)) as LOCATION_ID,  
  TRIM(to_varchar(xref.PARENT_ITEM_ID)) as ITEM_STYLE_ID,        
    to_date(xref.RELEASE_DATE) as RELEASE_DT,        
    cast(trim(xref.ALLOCATED_QTY) as INT) as ALLOCATED_QTY,        
    cast(trim(xref.XREF_ALLOC_NO) as INT) as DISTRO_NBR,        
   Current_timestamp() as INSERT_TS,        
   Current_timestamp() as UPDATE_TS        
from #ENV#_EDAP_STAGE_DB.#ENV#_EDAP_STAGE_TABLES.RMS_INV_ALLOCATION_XREF_TEMP_STG xref
 LEFT JOIN #ENV#_EDAP_ANALYTICS_DB.#ENV#_EDAP_ANALYTICS_TABLES.INV_ALLOCATION alloc on alloc.INV_ALLOCATION_ID = xref.ALLOC_ID
 LEFT JOIN #ENV#_EDAP_ANALYTICS_DB.#ENV#_EDAP_ANALYTICS_TABLES.LOCATION loc on loc.LOCATION_ID = xref.WH_ID and loc.LAST_EFFECTIVE_TS = \'9999-12-31 23:59:59.000\'
 LEFT JOIN #ENV#_EDAP_ANALYTICS_DB.#ENV#_EDAP_ANALYTICS_TABLES.ITEM itm on itm.ITEM_ID = xref.ITEM_ID and itm.LAST_EFFECTIVE_TS = \'9999-12-31 23:59:59.000\' and itm.MARKET_CD = \'USA\'
 LEFT JOIN #ENV#_EDAP_ANALYTICS_DB.#ENV#_EDAP_ANALYTICS_TABLES.PO_HEADER poh on poh.PO_ID = xref.ORDER_NO and poh.LAST_EFFECTIVE_TS = \'9999-12-31 23:59:59.000\' 
);

create or replace table #ENV#_EDAP_STAGE_DB.#ENV#_EDAP_STAGE_TABLES.RMS_INV_ALLOCATION_XREF_VIEW_SK as (
SELECT
    CASE WHEN INV_ALLOCATION_XREF_KEY = - 1 THEN
        ROW_NUMBER() OVER (ORDER BY INV_ALLOCATION_XREF_KEY, INV_ALLOCATION_XREF_ID) + COALESCE(MAX_INV_ALLOCATION_XREF_KEY, 0)
        ELSE INV_ALLOCATION_XREF_KEY
    END AS INV_ALLOCATION_XREF_KEY,
   INV_ALLOCATION_XREF_ID,
   INV_ALLOCATION_KEY,
   INV_ALLOCATION_ID,
   ITEM_KEY,        
   ITEM_ID, 
   MARKET_CD,
   PO_HEADER_KEY,        
   PO_HEADER_ID,        
   LOCATION_KEY,        
   LOCATION_ID,            
   ITEM_STYLE_ID,        
   RELEASE_DT,        
   ALLOCATED_QTY,        
   DISTRO_NBR,        
   INSERT_TS,        
   UPDATE_TS
 FROM #ENV#_EDAP_STAGE_DB.#ENV#_EDAP_STAGE_TABLES.RMS_INV_ALLOCATION_XREF_VIEW 
 CROSS JOIN (SELECT MAX(INV_ALLOCATION_XREF_KEY) AS MAX_INV_ALLOCATION_XREF_KEY FROM #ENV#_EDAP_ANALYTICS_DB.#ENV#_EDAP_ANALYTICS_TABLES.INV_ALLOCATION_XREF
   WHERE INV_ALLOCATION_XREF_KEY <> - 1) TGT_MAX);

TRUNCATE TABLE #ENV#_EDAP_ANALYTICS_DB.#ENV#_EDAP_ANALYTICS_TABLES.INV_ALLOCATION_XREF;

INSERT INTO #ENV#_EDAP_ANALYTICS_DB.#ENV#_EDAP_ANALYTICS_TABLES.INV_ALLOCATION_XREF
SELECT 
   INV_ALLOCATION_XREF_KEY,
   INV_ALLOCATION_XREF_ID,
   INV_ALLOCATION_KEY,
   INV_ALLOCATION_ID,
   ITEM_KEY,        
   ITEM_ID,
   MARKET_CD,
   PO_HEADER_KEY,        
   PO_HEADER_ID,        
   LOCATION_KEY,        
   LOCATION_ID,            
   ITEM_STYLE_ID,        
   RELEASE_DT,        
   ALLOCATED_QTY,        
   DISTRO_NBR,        
   INSERT_TS,        
   UPDATE_TS
FROM #ENV#_EDAP_STAGE_DB.#ENV#_EDAP_STAGE_TABLES.RMS_INV_ALLOCATION_XREF_VIEW_SK;',
'Y',
'R') ;


CREATE OR REPLACE VIEW PROD_EDAP_ANALYTICS_DB.PROD_EDAP_ANALYTICS.INV_ALLOCATION_XREF AS 
 select * from PROD_EDAP_ANALYTICS_DB.PROD_EDAP_ANALYTICS_TABLES.INV_ALLOCATION_XREF ;
 