--Create Target & Stage Table


/* 

Load config json files to this path:

  dbfs:/FileStore/tables/config/rms_alc/alc_alloc/


create or replace table PROD_EDAP_ANALYTICS_DB.PROD_EDAP_ANALYTICS_TABLES.INV_ALLOCATION
  ( INV_ALLOCATION_KEY NUMBER(38,0) NOT NULL,
  INV_ALLOCATION_ID VARCHAR(16777216),
  STATUS VARCHAR(16777216),
  ALLOCATION_DESCRIPTION VARCHAR(16777216),
  CALC_STATUS_CD VARCHAR(16777216),
  RULE_TEMPLATE_NAME VARCHAR(16777216),
  LOCATION_TEMPLATE_NAME VARCHAR(16777216),
  ENFORCE_WAREHOUSE_STORE_REL_FLAG VARCHAR(16777216),
  NEVER_UPDATE_GROUP_FLAG VARCHAR(16777216),
  CREATE_TS TIMESTAMP_NTZ(9),
  FIRST_EFFECTIVE_TS TIMESTAMP_NTZ(9) NOT NULL,
  LAST_EFFECTIVE_TS TIMESTAMP_NTZ(9) NOT NULL,
  MODIFY_TS TIMESTAMP_NTZ(9),
  CREATE_USER_ID VARCHAR(16777216),
  MODIFY_USER_ID VARCHAR(16777216) ,
  INSERT_TS TIMESTAMP_NTZ(9) NOT NULL,
  UPDATE_TS TIMESTAMP_NTZ(9) NOT NULL
   );
   
   
      
create or replace table PROD_EDAP_STAGE_DB.PROD_EDAP_STAGE_TABLES.INV_ALLOCATION_STG2
  ( INV_ALLOCATION_KEY NUMBER(38,0) NOT NULL,
  INV_ALLOCATION_ID VARCHAR(16777216),
  STATUS VARCHAR(16777216),
  ALLOCATION_DESCRIPTION VARCHAR(16777216),
  CALC_STATUS_CD VARCHAR(16777216),
  RULE_TEMPLATE_NAME VARCHAR(16777216),
  LOCATION_TEMPLATE_NAME VARCHAR(16777216),
  ENFORCE_WAREHOUSE_STORE_REL_FLAG VARCHAR(16777216),
  NEVER_UPDATE_GROUP_FLAG VARCHAR(16777216),
  CREATE_TS TIMESTAMP_NTZ(9),
  FIRST_EFFECTIVE_TS TIMESTAMP_NTZ(9) NOT NULL,
  LAST_EFFECTIVE_TS TIMESTAMP_NTZ(9) NOT NULL,
  MODIFY_TS TIMESTAMP_NTZ(9),
  CREATE_USER_ID VARCHAR(16777216),
  MODIFY_USER_ID VARCHAR(16777216),
  INSERT_TS TIMESTAMP_NTZ(9) NOT NULL,
  UPDATE_TS TIMESTAMP_NTZ(9) NOT NULL 
   );

INSERT INTO L1_AUDIT.CHECKPOINT_LOG VALUES ('RMS_ALC_ALLOC','RMS ALC_ALLOC Data Load',Current_Timestamp,'RMS_OWNER.ALC_ALLOC','CREATED_DATE','2009-04-23 00:00:00', NULL, NULL, NULL, NULL, NULL, NULL);

   */


   --

insert into PROD_EDAP_L1_DB.PROD_EDAP_L1_TABLES.DATA_PIPELINE_CONFIG  
values (
3,
'ALLOCATION',
4,
'INV_ALLOCATION_ALLOC',
1,
'RMS_INV_ALLOCATION_ALLOC',
1,
1,
'CREATE OR REPLACE VIEW #ENV#_EDAP_STAGE_DB.#ENV#_EDAP_STAGE_TABLES.INV_ALLOCATION_L1_DEDUP
  AS (
  SELECT
      cast(-1 as bigint) as INV_ALLOCATION_KEY,
      TRIM(to_varchar(ALLOC_ID)) as INV_ALLOCATION_ID,
      TRIM(to_varchar(STATUS)) as STATUS,
      TRIM(to_varchar(ALLOC_DESC)) as ALLOCATION_DESCRIPTION,
      TRIM(to_varchar(CALC_STATUS)) as CALC_STATUS_CD,
      TRIM(to_varchar(RULE_TEMPLATE_NAME)) as RULE_TEMPLATE_NAME,
      TRIM(to_varchar(LOCATION_TEMPLATE_NAME)) as LOCATION_TEMPLATE_NAME,
      TRIM(cast(ENFORCE_WH_STORE_REL_IND as char(1))) as ENFORCE_WAREHOUSE_STORE_REL_FLAG,
      TRIM(cast(NEVER_UPDATE_GROUP_IND as char(1))) as NEVER_UPDATE_GROUP_FLAG,
      to_timestamp(CREATED_DATE) as CREATE_TS,
      to_timestamp(CREATED_DATE) as FIRST_EFFECTIVE_TS,
      TO_TIMESTAMP_NTZ(\'9999-12-31 23:59:59.000\') AS LAST_EFFECTIVE_TS,
      to_timestamp(to_varchar(LOCKED_TIMESTAMP)) as MODIFY_TS,
      TRIM(to_varchar(CREATED_BY_USER_ID)) as CREATE_USER_ID,
      TRIM(to_varchar(LOCKED_BY_USER_ID)) as MODIFY_USER_ID,
      Current_timestamp() as INSERT_TS,
      Current_timestamp() as UPDATE_TS
  FROM
      (
        SELECT
        ROW_NUMBER() OVER (PARTITION BY ALLOC_ID ORDER BY ALLOC_ID) AS R, *
        FROM #ENV#_EDAP_STAGE_DB.#ENV#_EDAP_STAGE_TABLES.RMS_INV_ALLOCATION_TEMP_STG
      )
    WHERE R = 1
);
  CREATE OR REPLACE VIEW #ENV#_EDAP_STAGE_DB.#ENV#_EDAP_STAGE_TABLES.INV_ALLOCATION_CDC AS
 (
  SELECT
        COALESCE(TGT.INV_ALLOCATION_KEY, -1) AS INV_ALLOCATION_KEY,
            alc.INV_ALLOCATION_ID,
            alc.STATUS,
            alc.ALLOCATION_DESCRIPTION,
            alc.CALC_STATUS_CD,
            alc.RULE_TEMPLATE_NAME,
            alc.LOCATION_TEMPLATE_NAME,
            alc.ENFORCE_WAREHOUSE_STORE_REL_FLAG,
            alc.NEVER_UPDATE_GROUP_FLAG,
            alc.CREATE_TS,
            CASE WHEN alc.INV_ALLOCATION_ID = TGT.INV_ALLOCATION_ID THEN date_trunc(SECOND,current_timestamp()) else alc.FIRST_EFFECTIVE_TS end as FIRST_EFFECTIVE_TS,
            alc.LAST_EFFECTIVE_TS,
            alc.MODIFY_TS,
            alc.CREATE_USER_ID,
            alc.MODIFY_USER_ID,
            alc.INSERT_TS,
            alc.UPDATE_TS
  FROM #ENV#_EDAP_STAGE_DB.#ENV#_EDAP_STAGE_TABLES.INV_ALLOCATION_L1_DEDUP alc
  LEFT OUTER JOIN #ENV#_EDAP_ANALYTICS_DB.#ENV#_EDAP_ANALYTICS_TABLES.INV_ALLOCATION TGT
    ON TRIM(COALESCE(alc.INV_ALLOCATION_ID,\'-1\')) = TRIM(COALESCE(TGT.INV_ALLOCATION_ID,\'-1\'))
         AND TGT.LAST_EFFECTIVE_TS = \'9999-12-31 23:59:59.000\'
  WHERE COALESCE(alc.STATUS,\'\') <> COALESCE(TGT.STATUS,\'\')
        OR COALESCE(alc.ALLOCATION_DESCRIPTION,\'0\') <> COALESCE(TGT.ALLOCATION_DESCRIPTION,\'0\')
        OR COALESCE(alc.CALC_STATUS_CD,\'0\') <> COALESCE(TGT.CALC_STATUS_CD,\'0\')
        OR COALESCE(alc.RULE_TEMPLATE_NAME,\'\') <> COALESCE(TGT.RULE_TEMPLATE_NAME,\'\')
        OR COALESCE(alc.LOCATION_TEMPLATE_NAME,\'\') <> COALESCE(TGT.LOCATION_TEMPLATE_NAME,\'\')
        OR COALESCE(alc.ENFORCE_WAREHOUSE_STORE_REL_FLAG,\'\') <> COALESCE(TGT.ENFORCE_WAREHOUSE_STORE_REL_FLAG,\'\')
        OR COALESCE(alc.NEVER_UPDATE_GROUP_FLAG,\'\') <> COALESCE(TGT.NEVER_UPDATE_GROUP_FLAG,\'\')
        OR COALESCE(alc.CREATE_TS,\'\') <> COALESCE(TGT.CREATE_TS,\'\')
        OR COALESCE(alc.MODIFY_TS,\'\') <> COALESCE(TGT.MODIFY_TS,\'\')
        OR COALESCE(alc.CREATE_USER_ID,\'\') <> COALESCE(TGT.CREATE_USER_ID,\'\')
        OR COALESCE(alc.MODIFY_USER_ID,\'\') <> COALESCE(TGT.MODIFY_USER_ID,\'\')
   );
   
create or replace table #ENV#_EDAP_STAGE_DB.#ENV#_EDAP_STAGE_TABLES.INV_ALLOCATION_ALLOC_VIEW_SK as (
SELECT
  CASE WHEN INV_ALLOCATION_KEY = - 1 THEN
             DENSE_RANK() OVER (ORDER BY INV_ALLOCATION_ID) + COALESCE(MAX_INV_ALLOCATION_KEY, 0)
           ELSE INV_ALLOCATION_KEY
    END AS INV_ALLOCATION_KEY,
  INV_ALLOCATION_ID,
  STATUS,
  ALLOCATION_DESCRIPTION,
  CALC_STATUS_CD,
  RULE_TEMPLATE_NAME,
  LOCATION_TEMPLATE_NAME,
  ENFORCE_WAREHOUSE_STORE_REL_FLAG,
  NEVER_UPDATE_GROUP_FLAG,
  CREATE_TS,
  FIRST_EFFECTIVE_TS,
  LAST_EFFECTIVE_TS,
  MODIFY_TS,
  CREATE_USER_ID,
  MODIFY_USER_ID,
  INSERT_TS,
  UPDATE_TS
 FROM #ENV#_EDAP_STAGE_DB.#ENV#_EDAP_STAGE_TABLES.INV_ALLOCATION_CDC 
 CROSS JOIN (SELECT MAX(INV_ALLOCATION_KEY) AS MAX_INV_ALLOCATION_KEY FROM #ENV#_EDAP_ANALYTICS_DB.#ENV#_EDAP_ANALYTICS_TABLES.INV_ALLOCATION
   WHERE INV_ALLOCATION_KEY <> - 1) TGT_MAX);

 INSERT OVERWRITE INTO #ENV#_EDAP_STAGE_DB.#ENV#_EDAP_STAGE_TABLES.INV_ALLOCATION_STG2
  SELECT 
  INV_ALLOCATION_KEY,
  INV_ALLOCATION_ID,
  STATUS,
  ALLOCATION_DESCRIPTION,
  CALC_STATUS_CD,
  RULE_TEMPLATE_NAME,
  LOCATION_TEMPLATE_NAME,
  ENFORCE_WAREHOUSE_STORE_REL_FLAG,
  NEVER_UPDATE_GROUP_FLAG,
  CREATE_TS,
  FIRST_EFFECTIVE_TS,
  LAST_EFFECTIVE_TS,
  MODIFY_TS,
  CREATE_USER_ID,
  MODIFY_USER_ID,
  INSERT_TS,
  UPDATE_TS
  FROM #ENV#_EDAP_STAGE_DB.#ENV#_EDAP_STAGE_TABLES.INV_ALLOCATION_ALLOC_VIEW_SK;
  
  
  MERGE INTO #ENV#_EDAP_ANALYTICS_DB.#ENV#_EDAP_ANALYTICS_TABLES.INV_ALLOCATION TARGET 
 USING ( 
     SELECT STG.INV_ALLOCATION_KEY AS MERGE_KEY, STG.*
     FROM #ENV#_EDAP_STAGE_DB.#ENV#_EDAP_STAGE_TABLES.INV_ALLOCATION_STG2 STG
     UNION 
     SELECT NULL AS MERGE_KEY, STG1.*
     FROM #ENV#_EDAP_STAGE_DB.#ENV#_EDAP_STAGE_TABLES.INV_ALLOCATION_STG2 STG1
    ) STG2 ON TARGET.INV_ALLOCATION_KEY = STG2.MERGE_KEY AND TARGET.INV_ALLOCATION_ID = STG2.INV_ALLOCATION_ID
 WHEN MATCHED AND TARGET.LAST_EFFECTIVE_TS = \'9999-12-31 23:59:59.000\' THEN
   UPDATE SET TARGET.LAST_EFFECTIVE_TS = dateadd(SECOND, - 1, STG2.FIRST_EFFECTIVE_TS), TARGET.UPDATE_TS = STG2.UPDATE_TS
 WHEN NOT MATCHED AND MERGE_KEY IS NULL THEN
 INSERT (
  INV_ALLOCATION_KEY,
  INV_ALLOCATION_ID,
  STATUS,
  ALLOCATION_DESCRIPTION,
  CALC_STATUS_CD,
  RULE_TEMPLATE_NAME,
  LOCATION_TEMPLATE_NAME,
  ENFORCE_WAREHOUSE_STORE_REL_FLAG,
  NEVER_UPDATE_GROUP_FLAG,
  CREATE_TS,
  FIRST_EFFECTIVE_TS,
  LAST_EFFECTIVE_TS,
  MODIFY_TS,
  CREATE_USER_ID,
  MODIFY_USER_ID,
  INSERT_TS,
  UPDATE_TS)
 VALUES 
 (
  STG2.INV_ALLOCATION_KEY,
  STG2.INV_ALLOCATION_ID,
  STG2.STATUS,
  STG2.ALLOCATION_DESCRIPTION,
  STG2.CALC_STATUS_CD,
  STG2.RULE_TEMPLATE_NAME,
  STG2.LOCATION_TEMPLATE_NAME,
  STG2.ENFORCE_WAREHOUSE_STORE_REL_FLAG,
  STG2.NEVER_UPDATE_GROUP_FLAG,
  STG2.CREATE_TS,
  STG2.FIRST_EFFECTIVE_TS,
  STG2.LAST_EFFECTIVE_TS,
  STG2.MODIFY_TS,
  STG2.CREATE_USER_ID,
  STG2.MODIFY_USER_ID,
  STG2.INSERT_TS,
  STG2.UPDATE_TS);',
'Y',
'R') ;



CREATE OR REPLACE VIEW PROD_EDAP_ANALYTICS_DB.PROD_EDAP_ANALYTICS.INV_ALLOCATION_HIST AS 
 select * from PROD_EDAP_ANALYTICS_DB.PROD_EDAP_ANALYTICS_TABLES.INV_ALLOCATION ;


CREATE OR REPLACE VIEW PROD_EDAP_ANALYTICS_DB.PROD_EDAP_ANALYTICS.INV_ALLOCATION AS 
 select * from PROD_EDAP_ANALYTICS_DB.PROD_EDAP_ANALYTICS_TABLES.INV_ALLOCATION where LAST_EFFECTIVE_TS = '9999-12-31 23:59:59.000';