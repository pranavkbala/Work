--Load Config Files to this path:

--dbfs:/FileStore/tables/config/rms_alc/ws_alc_sched_xref/

/*

create table PROD_EDAP_ANALYTICS_DB.PROD_EDAP_ANALYTICS_TABLES.INV_ALLOCATION_SCHEDULE_STATUS
  ( INV_ALLOCATION_SCHEDULE_STATUS_KEY NUMBER(38,0) NOT NULL,
    INV_SCHEDULE_KEY NUMBER(38,0),
    INV_SCHEDULE_ID VARCHAR(16777216),
    INV_ALLOCATION_KEY NUMBER(38,0),
    INV_ALLOCATION_ID VARCHAR(16777216),
    STATUS VARCHAR(16777216),
    SKU_CNT NUMBER(38,0),
    STORE_CNT NUMBER(38,0),
    TOTAL_ALLOCATION_QTY NUMBER(38,0),
    AUTO_APPROVE_FLAG VARCHAR(16777216), 
    CREATED_TS TIMESTAMP_NTZ(9),
    INSERT_TS TIMESTAMP_NTZ(9),
    UPDATE_TS TIMESTAMP_NTZ(9)
   );
*/


insert into PROD_EDAP_L1_DB.PROD_EDAP_L1_TABLES.DATA_PIPELINE_CONFIG  
values (
3,
'ALLOCATION',
6,
'INV_ALLOCATION_SCHEDULE_STATUS',
1,
'RMS_INV_ALLOCATION_SCHEDULE_STATUS',
1,
1,
'DROP TABLE IF EXISTS #ENV#_EDAP_STAGE_DB.#ENV#_EDAP_STAGE_TABLES.RMS_INV_ALLOCATION_SCHEDULE_STATUS_VIEW;
DROP TABLE IF EXISTS #ENV#_EDAP_STAGE_DB.#ENV#_EDAP_STAGE_TABLES.RMS_INV_ALLOCATION_SCHEDULE_STATUS_VIEW_SK;

create or replace table #ENV#_EDAP_STAGE_DB.#ENV#_EDAP_STAGE_TABLES.RMS_INV_ALLOCATION_SCHEDULE_STATUS_VIEW as
(
select 
  cast(-1 as bigint) as INV_ALLOCATION_SCHEDULE_STATUS_KEY,
  TRIM(to_varchar(alc_sched.INV_ALLOCATION_SCHEDULE_KEY)) as INV_SCHEDULE_KEY,
  TRIM(to_varchar(sch_xref.SCHEDULE_ID)) as INV_SCHEDULE_ID,
  TRIM(CAST(coalesce(alloc.INV_ALLOCATION_KEY,-1) as bigint)) as INV_ALLOCATION_KEY,
  TRIM(to_varchar(sch_xref.ALLOC_ID)) as INV_ALLOCATION_ID,
  TRIM(to_varchar(sch_xref.STATUS)) as STATUS,
  cast(trim(sch_xref.SKU_CNT) as INT) as SKU_CNT,
  cast(trim(sch_xref.STORE_CNT) as INT) as STORE_CNT,        
  cast(trim(sch_xref.TOT_ALLOC_QTY) as INT) as TOTAL_ALLOCATION_QTY,
  TRIM(to_varchar(sch_xref.AUTO_APPROVE)) as AUTO_APPROVE_FLAG,
  to_timestamp(sch_xref.CREATED_DATE) as CREATED_TS,
  Current_timestamp() as INSERT_TS,        
  Current_timestamp() as UPDATE_TS       
from #ENV#_EDAP_STAGE_DB.#ENV#_EDAP_STAGE_TABLES.RMS_INV_ALLOCATION_SCHEDULE_STATUS_TEMP_STG sch_xref
 LEFT JOIN #ENV#_EDAP_ANALYTICS_DB.#ENV#_EDAP_ANALYTICS_TABLES.INV_ALLOCATION alloc on alloc.INV_ALLOCATION_ID = sch_xref.ALLOC_ID
 LEFT JOIN #ENV#_EDAP_ANALYTICS_DB.#ENV#_EDAP_ANALYTICS_TABLES.INV_ALLOCATION_SCHEDULE alc_sched on alc_sched.INV_ALLOCATION_SCHEDULE_ID = sch_xref.SCHEDULE_ID
);

create or replace table #ENV#_EDAP_STAGE_DB.#ENV#_EDAP_STAGE_TABLES.RMS_INV_ALLOCATION_SCHEDULE_STATUS_VIEW_SK as (
SELECT
    CASE WHEN INV_ALLOCATION_SCHEDULE_STATUS_KEY = - 1 THEN
        ROW_NUMBER() OVER (ORDER BY INV_ALLOCATION_SCHEDULE_STATUS_KEY, INV_SCHEDULE_ID,INV_ALLOCATION_ID) + COALESCE(MAX_INV_ALLOCATION_SCHEDULE_STATUS_KEY, 0)
        ELSE INV_ALLOCATION_SCHEDULE_STATUS_KEY
    END AS INV_ALLOCATION_SCHEDULE_STATUS_KEY,
    INV_SCHEDULE_KEY,
    INV_SCHEDULE_ID,
    INV_ALLOCATION_KEY,
    INV_ALLOCATION_ID,
    STATUS,
    SKU_CNT,
    STORE_CNT,
    TOTAL_ALLOCATION_QTY,
    AUTO_APPROVE_FLAG, 
    CREATED_TS,
    INSERT_TS,
    UPDATE_TS
 FROM #ENV#_EDAP_STAGE_DB.#ENV#_EDAP_STAGE_TABLES.RMS_INV_ALLOCATION_SCHEDULE_STATUS_VIEW 
 CROSS JOIN (SELECT MAX(INV_ALLOCATION_SCHEDULE_STATUS_KEY) AS MAX_INV_ALLOCATION_SCHEDULE_STATUS_KEY FROM #ENV#_EDAP_ANALYTICS_DB.#ENV#_EDAP_ANALYTICS_TABLES.INV_ALLOCATION_SCHEDULE_STATUS
   WHERE INV_ALLOCATION_SCHEDULE_STATUS_KEY <> - 1) TGT_MAX);

TRUNCATE TABLE #ENV#_EDAP_ANALYTICS_DB.#ENV#_EDAP_ANALYTICS_TABLES.INV_ALLOCATION_SCHEDULE_STATUS;

INSERT INTO #ENV#_EDAP_ANALYTICS_DB.#ENV#_EDAP_ANALYTICS_TABLES.INV_ALLOCATION_SCHEDULE_STATUS
SELECT 
    INV_ALLOCATION_SCHEDULE_STATUS_KEY,
    INV_SCHEDULE_KEY,
    INV_SCHEDULE_ID,
    INV_ALLOCATION_KEY,
    INV_ALLOCATION_ID,
    STATUS,
    SKU_CNT,
    STORE_CNT,
    TOTAL_ALLOCATION_QTY,
    AUTO_APPROVE_FLAG, 
    CREATED_TS,
    INSERT_TS,
    UPDATE_TS
FROM #ENV#_EDAP_STAGE_DB.#ENV#_EDAP_STAGE_TABLES.RMS_INV_ALLOCATION_SCHEDULE_STATUS_VIEW_SK;',
'Y',
'R');






CREATE OR REPLACE VIEW PROD_EDAP_ANALYTICS_DB.PROD_EDAP_ANALYTICS.INV_ALLOCATION_SCHEDULE_STATUS AS 
 select * from PROD_EDAP_ANALYTICS_DB.PROD_EDAP_ANALYTICS_TABLES.INV_ALLOCATION_SCHEDULE_STATUS ;
