MERGE INTO "PROD_EDAP_ANALYTICS_DB"."PROD_EDAP_ANALYTICS_TABLES"."GLOBAL_PO_LINK" TARGET
 USING (
    SELECT STG.GLOBAL_PO_LINK_KEY as MERGE_KEY, STG.*
        FROM "PROD_EDAP_STAGE_DB"."PROD_EDAP_STAGE_TABLES"."GLOBAL_PO_LINK_STG" STG 
    UNION
    SELECT NULL as MERGE_KEY, STG1.*
        FROM "PROD_EDAP_STAGE_DB"."PROD_EDAP_STAGE_TABLES"."GLOBAL_PO_LINK_STG" STG1) STG2 ON TARGET.GLOBAL_PO_LINK_KEY = STG2.MERGE_KEY
    WHEN MATCHED AND TARGET.LAST_EFFECTIVE_TS = '9999-12-31T23:59:59.000' THEN
        UPDATE SET TARGET.LAST_EFFECTIVE_TS = dateadd(second,-1,STG2.FIRST_EFFECTIVE_TS), TARGET.UPDATE_TS = STG2.UPDATE_TS 
    WHEN NOT MATCHED AND MERGE_KEY IS NULL THEN
        INSERT (GLOBAL_PO_LINK_KEY,
          ORIGINAL_PO_HEADER_KEY,
          ORIGINAL_PO_HEADER_ID,
          ORIGINAL_PO_LINE_KEY,
          ORIGINAL_PO_LINE_ID,
          APPLIED_PO_HEADER_KEY,
          APPLIED_PO_ID,
          APPLIED_PO_LINE_KEY,
          APPLIED_PO_LINE_ID,
          FIRST_EFFECTIVE_TS,
          LAST_EFFECTIVE_TS,
          FOREIGN_LINKED_AMT,
          LINKED_AMT,
          LINKED_QTY,
          DISCOUNT_FLAG,
          LINK_TYPE_CD,
          LINK_TYPE_DESC,
          INVENTORY_NBR,
          ORIGINAL_POSTED_DT,
          APPLIED_POSTED_DT,
          INSERT_TS,
          UPDATE_TS)
        VALUES (STG2.GLOBAL_PO_LINK_KEY,
STG2.ORIGINAL_PO_HEADER_KEY,
STG2.ORIGINAL_PO_HEADER_ID,
STG2.ORIGINAL_PO_LINE_KEY,
STG2.ORIGINAL_PO_LINE_ID,
STG2.APPLIED_PO_HEADER_KEY,
STG2.APPLIED_PO_ID,
STG2.APPLIED_PO_LINE_KEY,
STG2.APPLIED_PO_LINE_ID,
STG2.FIRST_EFFECTIVE_TS,
STG2.LAST_EFFECTIVE_TS,
STG2.FOREIGN_LINKED_AMT,
STG2.LINKED_AMT,
STG2.LINKED_QTY,
STG2.DISCOUNT_FLAG,
STG2.LINK_TYPE_CD,
STG2.LINK_TYPE_DESC,
STG2.INVENTORY_NBR,
STG2.ORIGINAL_POSTED_DT,
STG2.APPLIED_POSTED_DT,
STG2.INSERT_TS,
STG2.UPDATE_TS)