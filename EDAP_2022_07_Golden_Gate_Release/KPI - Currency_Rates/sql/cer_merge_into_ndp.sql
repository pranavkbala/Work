CREATE OR REPLACE TEMPORARY VIEW CURRENCY_EXCHANGE_RATE_STAGE_VIEW1 AS (
  SELECT DISTINCT
  STG.SOURCE_SYSTEM,
  STG.CURRENCY_CD,
  STG.FROM_CURRENCY_CD,
  STG.EXCHANGE_RATE_TYPE_CD,
  STG.EXCHANGE_RATE_START_DT,
  COALESCE(lead(STG.EXCHANGE_RATE_START_DT) over (partition by STG.EXCHANGE_RATE_TYPE_CD order by STG.EXCHANGE_RATE_START_DT ), '9999-12-31')  as EXCHANGE_RATE_END_DT,
  CAST(STG.EXCHANGE_RATE as DECIMAL(15, 8)) as EXCHANGE_RATE,
  STG.INSERT_TS,
  STG.UPDATE_TS
  FROM L2_STAGE.RMS_CURRENCY_EXCHANGE_RATE_STAGE STG
  Union
  SELECT DISTINCT
  STG2.SOURCE_SYSTEM,
  STG2.CURRENCY_CD,
  STG2.FROM_CURRENCY_CD,
  STG2.EXCHANGE_RATE_TYPE_CD,
  STG2.EXCHANGE_RATE_START_DT,
  COALESCE(lead(STG2.EXCHANGE_RATE_START_DT) over (partition by STG2.CURRENCY_CD, STG2.FROM_CURRENCY_CD order by STG2.EXCHANGE_RATE_START_DT ), '9999-12-31')  as EXCHANGE_RATE_END_DT,
  CAST(STG2.EXCHANGE_RATE as DECIMAL(15, 8)) as EXCHANGE_RATE,
  STG2.INSERT_TS,
  STG2.UPDATE_TS
  FROM L2_STAGE.NS_CURRENCY_EXCHANGE_RATE_STG STG2);


CREATE OR REPLACE TEMPORARY VIEW CURRENCY_EXCHANGE_RATE_STAGE_VIEW2 AS (
  SELECT DISTINCT
  STG3.SOURCE_SYSTEM,
  STG3.CURRENCY_CD,
  STG3.FROM_CURRENCY_CD,
  STG3.EXCHANGE_RATE_TYPE_CD,
  STG3.EXCHANGE_RATE_START_DT,
  CAST('9999-12-31' AS DATE)  as EXCHANGE_RATE_END_DT,
  CAST(STG3.EXCHANGE_RATE as DECIMAL(15, 8)) as EXCHANGE_RATE,
  STG3.INSERT_TS,
  STG3.UPDATE_TS
  FROM L2_STAGE.XE_CURRENCY_EXCHANGE_RATE_STAGE STG3);


 MERGE INTO L2_ANALYTICS_TABLES.CURRENCY_EXCHANGE_RATE TARGET USING
  (

   SELECT STG1_1.EXCHANGE_RATE_TYPE_CD AS MERGE_KEY, STG1_1.* FROM CURRENCY_EXCHANGE_RATE_STAGE_VIEW1 STG1_1
   UNION
   SELECT NULL AS MERGE_KEY, STG1_2.* FROM CURRENCY_EXCHANGE_RATE_STAGE_VIEW1 STG1_2
 
  ) STG1 ON TARGET.EXCHANGE_RATE_TYPE_CD = STG1.MERGE_KEY AND TARGET.EXCHANGE_RATE_START_DT = STG1.EXCHANGE_RATE_START_DT AND TARGET.FROM_CURRENCY_CD = STG1.FROM_CURRENCY_CD AND TARGET.CURRENCY_CD = STG1.CURRENCY_CD
   WHEN MATCHED AND TARGET.EXCHANGE_RATE_END_DT = '9999-12-31' THEN
   UPDATE SET
     EXCHANGE_RATE_END_DT = STG1.EXCHANGE_RATE_END_DT,
     UPDATE_TS = STG1.UPDATE_TS
   WHEN NOT MATCHED AND MERGE_KEY IS NULL THEN
     INSERT (
    SOURCE_SYSTEM, 
    CURRENCY_CD, 
    FROM_CURRENCY_CD, 
    EXCHANGE_RATE_TYPE_CD, 
    EXCHANGE_RATE_START_DT, 
    EXCHANGE_RATE_END_DT, 
    EXCHANGE_RATE, 
    INSERT_TS, 
    UPDATE_TS 
    ) VALUES
  (
    STG1.SOURCE_SYSTEM, 
    STG1.CURRENCY_CD, 
    STG1.FROM_CURRENCY_CD, 
    STG1.EXCHANGE_RATE_TYPE_CD, 
    STG1.EXCHANGE_RATE_START_DT, 
    STG1.EXCHANGE_RATE_END_DT, 
    STG1.EXCHANGE_RATE, 
    STG1.INSERT_TS, 
    STG1.UPDATE_TS
  );

   MERGE INTO L2_ANALYTICS_TABLES.CURRENCY_EXCHANGE_RATE TARGET USING
  (

   SELECT STG2_1.EXCHANGE_RATE_TYPE_CD AS MERGE_KEY, STG2_1.* FROM CURRENCY_EXCHANGE_RATE_STAGE_VIEW2 STG2_1
   UNION
   SELECT NULL AS MERGE_KEY, STG2_2.* FROM CURRENCY_EXCHANGE_RATE_STAGE_VIEW2 STG2_2
 
  ) STG2 ON TARGET.EXCHANGE_RATE_TYPE_CD = STG2.MERGE_KEY AND TARGET.FROM_CURRENCY_CD = STG2.FROM_CURRENCY_CD AND TARGET.CURRENCY_CD = STG2.CURRENCY_CD
   WHEN MATCHED AND TARGET.EXCHANGE_RATE_END_DT = '9999-12-31' THEN
   UPDATE SET
     EXCHANGE_RATE_END_DT = STG2.EXCHANGE_RATE_START_DT - INTERVAL '1' DAY,
     UPDATE_TS = STG2.UPDATE_TS
   WHEN NOT MATCHED AND MERGE_KEY IS NULL THEN
     INSERT (
    SOURCE_SYSTEM, 
    CURRENCY_CD, 
    FROM_CURRENCY_CD, 
    EXCHANGE_RATE_TYPE_CD, 
    EXCHANGE_RATE_START_DT, 
    EXCHANGE_RATE_END_DT, 
    EXCHANGE_RATE, 
    INSERT_TS, 
    UPDATE_TS 
    ) VALUES
  (
    STG2.SOURCE_SYSTEM, 
    STG2.CURRENCY_CD, 
    STG2.FROM_CURRENCY_CD, 
    STG2.EXCHANGE_RATE_TYPE_CD, 
    STG2.EXCHANGE_RATE_START_DT, 
    STG2.EXCHANGE_RATE_END_DT, 
    STG2.EXCHANGE_RATE, 
    STG2.INSERT_TS, 
    STG2.UPDATE_TS
  );